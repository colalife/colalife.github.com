<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: octopress | 超群的博客]]></title>
  <link href="http://colalife.com/tags/octopress/atom.xml" rel="self"/>
  <link href="http://colalife.com/"/>
  <updated>2014-02-10T11:32:32+08:00</updated>
  <id>http://colalife.com/</id>
  <author>
    <name><![CDATA[wang chaoqun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cygwin & Wine & Ruby 记录]]></title>
    <link href="http://colalife.com/blog/2013/01/cygwin-and-wine-and-ruby-ji-lu.html/"/>
    <updated>2013-01-16T16:03:36+08:00</updated>
    <id>http://colalife.com/blog/2013/01/cygwin-and-wine-and-ruby-ji-lu</id>
    <content type="html"><![CDATA[<p>cygwin是一个在windows平台上运行的unix模拟环境, wine则可以安装在Linux，再对应到Windows相应的函数来调用DLL以运行Windows程序。这两个就是利器，windows下不想用虚拟机（占用资源还挺多）或双系统，就可以用用cygwin；服务器上想搞点exe的东西就安装个wine。至于ruby，是因为octopress要用，开个虚拟机写博客很不爽，windows下折腾安装配置，却中文编码没解决，还是cygwin搞定。<!--more--></p>

<h2>cygwin的安装</h2>

<p>官网下载setup-x86_64.exe，运行，下一步，到download site选第一个163的镜像，速度快些；下一步到select packages页面，不选不点，直接下一步，会下载安装默认配置的相关包；安装完默认，重新运行setup，选择要用的包，比如下面这些基本需要：
<a href="http://blog.developwithpassion.com/2012/03/30/installing-rvm-with-cygwin-on-windows/">摘录自blog.developwithpassion.com</a><br/>
```
Archive</p>

<pre><code>unzip – Unzipping zip files  
</code></pre>

<p>Net</p>

<pre><code>openssl – bin and sources
openssh – Only if you are not going to compile openssh yourself
curl – download internet resources
</code></pre>

<p>Devl</p>

<pre><code>colorgcc
gcc
gcc-core – compiler
git
git-completion
git-gui
git-svn
gitk
libtool – Shared library generation tool. You’ll need it when trying to compile rubies
libncurses-devel – Used when compiling several other tools I use
make
mercurial
openssl-devel – Required for compiling openssh (not necessarily required for rvm, but I always install it to compile openssh myself)
readline
Libs
zlib
zlib-devel
</code></pre>

<p>Utils</p>

<pre><code>ncurses – Enabling better handling of terminal
patch – Apply a diff file to an original.
</code></pre>

<p>```</p>

<h2>wine的安装，centos6.x</h2>

<p><code>
wget http://mirrors.sohu.com/fedora-epel/6/i386/epel-release-6-8.noarch.rpm
rpm -ivh epel-release-6-8.noarch.rpm
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
yum makecache
yum install wine
</code>
安装完成后，应用程序（application）->wine->wine configure稍作配置，也可能会提示download gecko，install 完成即可
把windows/system32下的MFC42.dll   msxml.dll    msvcp60.dll   riched20.dll    riched32.dll 这几个文件复制到 ~/.wine/drive_c/windows/system32里，再输入命令：winecfg<br/>
安装exe，英文系统会有中文乱码情况
<code>
wine whatever.exe
</code></p>

<h2>安装Ruby</h2>

<p>我虚拟了两个centos，一个用make install安装并配置octopress环境，另一个同样方法却不成功，后来用rvm可行，不用yum install ruby 是因为版本过低。</p>

<h4>RVM安装：</h4>

<p><code>
curl -L https://get.rvm.io | bash -s stable --ruby
</code>
<code>
ruby --version
</code>显示版本即成功</p>

<h4>make install：</h4>

<p><code>
wget ftp://ftp.ruby-lang.org//pub/ruby/2.1/ruby-2.1.0.tar.gz
tar -zxvf ruby-2.1.0.tar.gz
cd ruby-2.1.0
./configure --prefix=/usr/local/ruby
make
make test
make install  
</code></p>

<h4>windows7下简直是个悲剧：</h4>

<p>下载rubyinstaller安装，devkit解压，然后cmd下
cdd到DevKit path<br/>
<code>
ruby dk.rb init
ruby dk.rb review
ruby dk.rb install
</code>
出现utf-8错误，使用chcp 1252，再进行上三句，done<br/>
然后配置octopress环境，英文下rake成功，有中文（比如文章分类、标签带中文的）不成;<br/>
<a href="http://txgcwm.github.io/">摘录自txgcwm.github.io</a></p>

<blockquote><p>在实际使用（rake generate/rake preview）的时候，若blog整体采用了非ascii码的编码格式（比如utf-8）就会出现类似这样的错误：<br/>
Liquid error: incompatible encoding regexp match (ascii-8bit regexp with utf-8 string)<br/>
其实是由于插件文件plugins/category_list_tag.rb本身是ascii编码所致:
<code>
$ chardet category_list_tag.rb
category_list_tag.rb: ascii (confidence: 1.00)
</code>
category_list_tag.rb中很多地方用到了ruby的正则表达式，而ruby的正则表达式在匹配的时候，默认是按照“代码源文件”的编码格式(在这里是ascii)进行匹配的，而如果blog是utf-8编码的话就会出现上述错误。有两种解决办法：
1. 将category_list_tag.rb转成utf-8格式。<br/>
2. 更改category_list_tag.rb中所有的正则表达式声明，加上u选项（u的意思就是以utf-8编码格式来进行匹配）。例如，若原正则表达式是/regexp/, 则改成/regexp/u。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装git, 建立Octopress博客]]></title>
    <link href="http://colalife.com/blog/2013/01/an-zhuang-git-create-octopress-blog.html/"/>
    <updated>2013-01-07T14:34:24+08:00</updated>
    <id>http://colalife.com/blog/2013/01/an-zhuang-git-create-octopress-blog</id>
    <content type="html"><![CDATA[<p>本文参考了若干网络日志（谢过~）, 配置个人博客后整理而成</p>

<h2>安装git  </h2>

<p><code>  
yum -y install git
git --version
</code></p>

<!--more-->


<p>在本机使用git创建SSH Key<br/>
<code>  
ssh-keygen -C "username" -t rsa  
ssh -v git@github.com  
</code><br/>
//if denied, use <code>ssh-add ~/.ssh/id_rsa</code> to fix this.<br/>
备注: useremail为你注册github用户时的邮箱地址 这时，在系统目录下就会生成一个.ssh文件夹，里面为对应的SSH Key，其中id_rsa.pub是Gighub需要的SSH公钥文件。 将id_ras.pub文件里内容拷贝到Github的Account Settings里的key中。 这样你就可以直接使用Git和Github了.</p>

<h2>安装ruby  </h2>

<p><code>  
wget ftp://ftp.ruby-lang.org/pub/ruby/2.1/ruby-2.1.0.tar.gz  
tar -zxvf ruby-2.1.0.tar.gz
cd ruby-2.1.0
./configure --prefix=/usr/local/ruby
make
make test
make install
</code></p>

<h2>安装OctoPress  </h2>

<p>通过Git从Github上克隆一份Octopress<br/>
<code>  
git clone git://github.com/imathis/octopress.git octopress
cd octopress  
gem install bundler  
bundle install  
</code>
安装Octopress默认的Theme
<code>  
rake install  
</code><br/>
//if error: rake aborted!<br/>
//You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.2.2.
delete your Gemfile.lock and edit the version of rake specified in your Gemfile to 10.1. Job done</p>

<h2>通过_config.yml来配置博客  </h2>

<h2>创建一个博客</h2>

<p><code>  
rake new_post["Hello World"]
</code></p>

<h2>创建一个博客页面</h2>

<p><code>  
rake new_page["blog"]
</code></p>

<p>预览效果：<br/>
<code>  
rake generate  
rake preview  
</code></p>

<p>然后在浏览器中打开<a href="http://localhost:4000">http://localhost:4000</a></p>

<h2>发布Octopress到Github</h2>

<p><code>
cd octopress  
rake setup_github_pages  
Repository url: git@github.com:username/username.github.com.git  
</code>
将博客发布到Github上，输入下面命令：
<code>  
rake deploy  
</code>
这样，生成的内容将会自动发布到master分支，并且可以使用 <a href="http://username.github.com">http://username.github.com</a> 访问内容。</p>

<p>将source提交：<br/>
<code>  
git add .  
git commit -m "blog init"  
git push origin source  
</code>
删除之前的添加信息 (配置文件在 ~/octopress/.git/config)
<code>  
git remote rm origin  
git remote add origin git@github.com:username/username.github.com.git  
</code></p>

<h2>添加多说评论  </h2>

<p>在_config.yml尾部添加如下行：<br/>
```</p>

<h1>Duoshuo Comments</h1>

<p>duoshuo_show_comment_count: true<br/>
```</p>

<p>在source/_layouts/post.html尾部添加如下代码：<br/>
```<br/>
<br/>
```</p>

<p>创建source/_includes/post/duoshuo.html文件，将从多说获得的代码放入其中。<br/>
```</p>

<!-- Duoshuo Comment BEGIN -->


<pre><code>&lt;div class="ds-thread"&gt;&lt;/div&gt;
</code></pre>

<script type="text/javascript">
var duoshuoQuery = {short_name:"username"};
    (function() {
        var ds = document.createElement('script');
        ds.type = 'text/javascript';ds.async = true;
        ds.src = 'http://static.duoshuo.com/embed.js';
        ds.charset = 'UTF-8';
        (document.getElementsByTagName('head')[0] 
        || document.getElementsByTagName('body')[0]).appendChild(ds);
    })();
    </script>


<!-- Duoshuo Comment END -->


<p>```</p>

<h2>将AddThis更换为JiaThis</h2>

<p>打开source/_includes/post/sharing.html，注释掉<code>&lt;div class="share"&gt;...&lt;/div&gt;</code>中的AddThis相关语句,然后在<code>&lt;/div&gt;</code>前加入从JiaThis获得的代码。</p>

<h2>Octopress写作</h2>

<p><code>  
cd octopress  
rake new_post["new blog"]  
</code></p>

<h2>another pc</h2>

<p><code>  
git clone -b source git@github.com:username/username.github.com.git octopress  
cd octopress  
git clone git@github.com:username/username.github.com.git _deploy  
</code></p>

<h2>增加category_list插件</h2>

<p>保存以下代码到plugins/category_list_tag.rb：
```
module Jekyll
  class CategoryListTag &lt; Liquid::Tag</p>

<pre><code>def render(context)
  html = ""
  categories = context.registers[:site].categories.keys
  categories.sort.each do |category|
    posts_in_category = context.registers[:site].categories[category].size
    category_dir = context.registers[:site].config['category_dir']
    category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase)
    html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://colalife.com/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
  end
  html
end
</code></pre>

<p>  end
end</p>

<p>Liquid::Template.register_tag(&lsquo;category_list&rsquo;, Jekyll::CategoryListTag)
```</p>

<p>将category加入到侧边导航栏，需要增加一个aside
复制以下代码到source/_includes/asides/category_list.html。
```
<section>
  <h1>文章分类</h1>
  <ul id="categories"></p>

<pre><code><li class='category'><a href='/blog/categories/ftp/'>ftp (1)</a></li>
<li class='category'><a href='/blog/categories/hibernate/'>hibernate (1)</a></li>
<li class='category'><a href='/blog/categories/java/'>java (6)</a></li>
<li class='category'><a href='/blog/categories/linux/'>linux (2)</a></li>
<li class='category'><a href='/blog/categories/mongodb/'>mongodb (2)</a></li>
<li class='category'><a href='/blog/categories/mysql/'>mysql (1)</a></li>
<li class='category'><a href='/blog/categories/tech/'>tech (16)</a></li>
<li class='category'><a href='/blog/categories/tomcat/'>tomcat (1)</a></li>
<li class='category'><a href='/blog/categories/web/'>web (2)</a></li>
<li class='category'><a href='/blog/categories/dai-ma/'>代码 (3)</a></li>
<li class='category'><a href='/blog/categories/qi-ta/'>其他 (1)</a></li>
<li class='category'><a href='/blog/categories/jia-gou/'>架构 (1)</a></li>
<li class='category'><a href='/blog/categories/sheng-huo/'>生活 (7)</a></li>
<li class='category'><a href='/blog/categories/suan-fa/'>算法 (1)</a></li>
<li class='category'><a href='/blog/categories/zhi-ye/'>职业 (2)</a></li>
<li class='category'><a href='/blog/categories/she-ji-mo-shi/'>设计模式 (1)</a></li>
<li class='category'><a href='/blog/categories/du-shu/'>读书 (3)</a></li>

</code></pre>

<p>  </ul>
</section>
```
配置侧边栏需要修改_config.yml文件，修改其default_asides项：
default_asides: [&hellip;, asides/category_list.html, &hellip;]</p>

<h2>中文分类支持</h2>

<p>侧边栏添加了文章分类后，英文分类没有问题，点击打开是分类下的文章列表；但中文分类，如云计算、设计模式之类就不行了，网上有各种解决办法，复杂了点；而且我发现新建日志的文件名如果是中文则会转成拼音，文章分类也是，你可以看下public/blog/categories下的文件名；所以如果能把边栏的链接地址改成拼音就行了，rakefile里有<code>rake new_post</code>代码；查看分析发现和<code>plugins/category_list_tag.rb</code>的处理类似，<br/>
<code>category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase</code>是转换为单词‘-’分隔并且小写，rakefile里是<code> mkdir_p  
"#{source_dir}/#{posts_dir}"  
filename = "#{source_dir}/#{posts_dir}/#{Time.now.strftime('%Y-%m-%d')}-#{title.to_url}.#{new_post_ext}"</code><br/>
  <strong>注意:</strong>title多了<code>.to_url</code>，原来如此，将<code>category_list_tag.rb</code>里改成<br/>
  <code>category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase.to_url</code>，
然后rake generate  rake preview<br/>
done！</p>
]]></content>
  </entry>
  
</feed>
