<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 管理工作 | 超群的博客]]></title>
  <link href="http://wangchaoqun.com/tags/guan-li-gong-zuo/atom.xml" rel="self"/>
  <link href="http://wangchaoqun.com/"/>
  <updated>2014-01-29T10:21:58+08:00</updated>
  <id>http://wangchaoqun.com/</id>
  <author>
    <name><![CDATA[wang chaoqun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关于公司技术管理工作的几点思考]]></title>
    <link href="http://wangchaoqun.com/blog/2011/04/guan-yu-gong-si-ji-zhu-guan-li-gong-zuo-de-ji-dian-si-kao.html/"/>
    <updated>2011-04-14T15:06:42+08:00</updated>
    <id>http://wangchaoqun.com/blog/2011/04/guan-yu-gong-si-ji-zhu-guan-li-gong-zuo-de-ji-dian-si-kao</id>
    <content type="html"><![CDATA[<p>一. 关于文档规范</p>

<p>文档规范化正在形成的过程中，具体标准根据项目大小、要求、进度等不同而不同。开发人员写文档的能力向来是个短板，多看多借鉴国标、成熟的开发过程以及其他公司的文档，明白知道各文档所应涵盖的内容，学会并提高文档书写水平，是文档规范化的前提。在此基础之上，再召开会议讨论制定文档规范化模板，制定公司特色的文档体系才是可行的。<!--more--></p>

<p>二.    关于需求理解、分析设计</p>

<p>一般来讲，前期与客户沟通的不充分，调研工作不充分而产生需求理解上的偏差（如果排除人员能力水平、方法上的问题的话）是导致接下来分析设计以及开发工作偏差和反复修改的重要原因，并且有损开发人员的工作热情。因此，我提议重视和做好调研和需求分析工作，并在项目开始阶段召开几次分析会议，项目组成员充分讨论，每次会议都要评分，以使项目组员对项目需求和设计的理解程度达到进行开发的要求。</p>

<p>三.    关于项目产出物的管理</p>

<p>如各类文档、各类资料、可复用模块、产品化软件，需要制定出制度和管理流程，以达到规范化管理。涉及到具体的要求和流程，需要先制定出思路和计划，讨论研究。</p>

<p>四.    关于产品化开发和模块复用封装</p>

<p>就现在来看，公司已经积累了若干项目，其中的功能有可以剥离出来封装服用的，同时这项工作也有难度，它很大程度上需要大家有扎实的开发基础，良好的代码编写习惯，要写出逻辑清晰、方便调用的代码来。我的看法是简单的功能可以封装的先完成，以供日常使用；同时讨论、借鉴、探求产品化思路，制定实施规划。</p>

<p>五.    关于项目管理</p>

<p>项目开发过程中经常会出现各种问题，比如在团队建设、人员管理、与客户沟通以及编码开发、测试等各方面，人与人相处，尤其工作当中，难免出现误会争吵，实属正常，对事不对人就好。我所观察，项目开发中最大的矛盾可能是工作量大、时间紧张与开发人员能力、效率不高之间的矛盾了；我们需要可能是较长一段时间继续在项目开发中锻炼和成长；我所担心，无论是技术总监、项目经理、组长还是开发人员，会慢慢成为项目组乃至公司的短板，还是要关注自己，提高自己的能力。</p>

<p>六.    关于技术水平提高</p>

<p>如果最终的需求、产品、网站、系统以及客户给钱都是落在代码上，我们就无法忽略代码的重要性；因为大家每天大部分的时间都在敲代码，如果你珍惜你的时间而不是浪费，你也会去想到底如何才能写出整洁规范的代码，也无法忽略编码水平提高的需要；如果你要修改别人的代码，看到的却像是一地鸡毛，无从下手，影响心情，那你应该想一想你自己的代码是否在别人看也是这样；如何去从源头控制bug数量，提高代码的正确性、健壮性等等，关于代码的很多都是值得我们关注的。我认为代码审查机制是需要的，从规范性着手，从每周或每天的code review开始，改善我们的代码。另外一方面就是购置学习书籍，可以由全体员工积极推荐书目，大家投票决定是否购置，而且不限于技术方面。</p>

<p>七.    关于框架开发</p>

<p>我所计划框架的演进是有一个路线图的，从ibatis+struts，到ssh，到现在ss，以及ssh2或sh等等。实际上，如果项目经理或技术经理一直停留在一个框架上或是从外派公司拿的，只因为他很熟悉，那么势必造成组员技术水平的停滞不前甚至下降。虽然我一直维护框架文档并不时的更新，框架源码去年时候就发布出来，但是很多人没有认真看，遇到问题仍然不知怎样解决。培训时候就学习ssh，现在的开发框架也是ssh，大部分的功能都一样，不客气地讲，不会用的原因就是struts，spring，hibernate基础不牢固。待这几个项目做完，各人对框架应该是很上手加熟悉了，下一步的计划就是在重新开发自己的框架，类似开源项目，每个人都可以开发修改、维护这个框架，当然，前提是代码水平和编码习惯要改善。</p>

<p>另：关于员工职业规划</p>

<p>新员工培训中有职业素养，而对于工作一年和两年以上的员工，职场相关的交流和学习就比较少，如果能让大家成长成一个职业化、专业化、高效能的职业人士会在很大程度上促进公司的发展。</p>

<p>以上七个方面依然是我接下来工作的主要内容，需要按部就班推进执行。</p>

<p>审查年初的工作计划，存在规划粗略、执行的资源如工作时间、人力资源等不足的问题，其中应在接下来的年度继续规划和执行的工作如：<br/>
1、规范开发流程，这在项目管理体系中属于组织过程资产，是一个长期积累，不断发展的过程。<br/>
2、组织技术培训，是因为公司高度重视对人的培养，并为公司发展战略服务，通过帮助员工提升工作绩效和个人能力，推动员工与公司的共同成长。员工不仅可以选择技术、设计、产品、市场等专业技能发展通道，也可以有项目管理的发展通道。这项工作的开展需要管理层的支持。<br/>
3、产品研发的工作无论从技术上还是管理上都不同于普通项目，这方面我们的知识和经验不足，需要一个规划、学习、摸索实践以及积累的过程。</p>

<p>关于项目管理，之前项目管理工作中，如果有项目管理知识体系这些理论作为指导，去开展项目工作，问题会少很多，项目工作的效率和效果也会好很多。现在公司项目管理可改进的方面我认为：<br/>
1、客户相关的，涉及到项目范围、变更、沟通等，有效的管理客户是一个值得努力的方向；<br/>
2、人力资源相关，如团队建设和管理等，提高团队绩效、个人能力等方面是我们工作中需要关注和努力的。<br/>
3、成本和质量相关，需要我们在项目开发工作中重视项目工作的成本和项目完成的质量。</p>

<p>新的一年里，公司面临新的机遇和新的挑战，亟需深耕行业，形成自己的业务体系和战略布局，中级管理层人员更要提高业务和管理能力，为公司发展做出贡献。</p>
]]></content>
  </entry>
  
</feed>
